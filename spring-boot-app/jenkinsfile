pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    stages {
        stage("clone the repository") {
            steps {
                git branch: 'main', url: 'https://github.com/elam1234/End-to-End-CICD_JAVA.git'
            }
        }
        stage("package the code") {
            steps {
                sh 'ls -ltr'
                sh 'cd spring-boot-app && mvn clean package'
            }
        }
        stage('static code analysis') {
            environment {
                SONAR_URL = "http://3.128.168.103:9000/"
            }
            steps {
                withCredentials([string(credentialsId: 'SONAR_AUTH_TOKEN1', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh "cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}"
                }
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "elampari/java-cicd:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            steps {
                script {
                    sh "cd spring-boot-app && docker build -t ${DOCKER_IMAGE} ."
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "End-to-End-CICD_JAVA"
                GIT_USER_NAME = "elam1234"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN1')]) {
                    sh """
                        git config user.email "parithi053@gmail.com"
                        git config user.name "Elamparithi"
                        BUILD_NUMBER="${BUILD_NUMBER}"
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifest/deployment.yml
                        git add spring-boot-app-manifest/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN1}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main -f
                    """
                }
            }
        }
    }
}
